// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineGuideApp.Model;

namespace WineGuideApp.Migrations
{
    [DbContext(typeof(AppWineGuideContext))]
    [Migration("20211227164302_Initial_1.1")]
    partial class Initial_11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WineGuide.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("recipe_name");

                    b.Property<int>("RecipeTypeAlcohol")
                        .HasColumnType("int")
                        .HasColumnName("recipe_type_alcohol");

                    b.HasKey("RecipeId");

                    b.ToTable("recipe");
                });

            modelBuilder.Entity("WineGuide.Models.RecipeIngredients", b =>
                {
                    b.Property<int>("RecipeIngredientsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_ingredients_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeIngredientsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("recipe_ingredients_name");

                    b.Property<int>("RecipeIngredientsQuantity")
                        .HasColumnType("int")
                        .HasColumnName("recipe_ingredients_quantity");

                    b.Property<int>("RecipeIngredientsTypeOfQuantity")
                        .HasColumnType("int")
                        .HasColumnName("recipe_ingredients_type_of_quantity");

                    b.HasKey("RecipeIngredientsId");

                    b.ToTable("recipe_ingredients");
                });

            modelBuilder.Entity("WineGuide.Models.SetMash", b =>
                {
                    b.Property<int>("SetMashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("set_mash_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SetMashStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("set_mash_start");

                    b.HasKey("SetMashId");

                    b.ToTable("set_mash");
                });

            modelBuilder.Entity("WineGuide.Models.SetMashInteraction", b =>
                {
                    b.Property<int>("SetMashInteractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("set_mash_interaction_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SetMashInteractionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("set_mash_interaction_name");

                    b.Property<int>("SetMashInteractionQuantity")
                        .HasColumnType("int")
                        .HasColumnName("set_mash_interaction_quantity");

                    b.Property<int>("SetMashInteractionTypeOfQuantity")
                        .HasColumnType("int")
                        .HasColumnName("set_mash_interaction_type_of_quantity");

                    b.HasKey("SetMashInteractionId");

                    b.ToTable("set_mash_interaction");
                });

            modelBuilder.Entity("WineGuide.Models.UserAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_email");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_password");

                    b.HasKey("AccountId");

                    b.ToTable("user_account");
                });

            modelBuilder.Entity("WineGuideApp.Model.UserAccount_Recipe", b =>
                {
                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("UserAccountId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UserAccount_Recipes");
                });

            modelBuilder.Entity("WineGuideApp.Model.UserAccount_Recipe", b =>
                {
                    b.HasOne("WineGuide.Models.Recipe", "Recipe")
                        .WithMany("UserAccount_Recipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineGuide.Models.UserAccount", "UserAccount")
                        .WithMany("UserAccount_Recipes")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("WineGuide.Models.Recipe", b =>
                {
                    b.Navigation("UserAccount_Recipes");
                });

            modelBuilder.Entity("WineGuide.Models.UserAccount", b =>
                {
                    b.Navigation("UserAccount_Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
